Parameters:
  App:
    Type: String
    Description: Your application's name.
  Env:
    Type: String
    Description: The environment name your service, job, or workflow is being deployed to.
  Name:
    Type: String
    Description: The name of the service, job, or workflow being deployed.


Resources:
  # Create your resource here, such as an AWS::DynamoDB::Table:
  # MyTable:
  #   Type: AWS::DynamoDB::Table
  #   Properties:
  #     ...

  # 1. In addition to your resource, if you need to access the resource from your ECS task 
  # then you need to create an AWS::IAM::ManagedPolicy that holds the permissions for your resource.
  #
  # For example, below is a sample policy for MyTable:
  EduversePolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: TuttiAppPolicy
            Effect: Allow
            Action:
              - cloudwatch:PutMetricData
              - ds:CreateComputer
              - ds:DescribeDirectories
              - ec2:DescribeInstanceStatus
              - sts:AssumeRole
              - logs:*
              - ssm:*
              - ec2messages:*
              - rekognition:*
              - appsync:*
              - secretsmanager:Get*
              - sumerian:*
              - textract:*
              - polly:*
              - transcribe:*
              - dynamodb:*
            Resource: "*"

Outputs:

  # 1. You also need to output the IAM ManagedPolicy so that Copilot can inject it to your ECS task role.
  EduversePolicyArn:
    Description: "The ARN of the ManagedPolicy to attach to the task role."
    Value: !Ref EduversePolicy
